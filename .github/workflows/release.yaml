---
name: Release Workflow

'on':
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.4.3)'
        required: true
        type: string
  release:
    types: [published]

permissions:
  contents: write
  id-token: write

jobs:
  # This job runs when manually triggered to prepare a release
  prepare_release:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update Version in Manifest
        run: |
          VERSION="${{ inputs.version }}"
          # Remove 'v' prefix if present for manifest
          VERSION_NO_V="${VERSION#v}"
          sed -i "s/\"version\": \".*\"/\"version\": \"${VERSION_NO_V}\"/" ./custom_components/csnet_home/manifest.json

      - name: Commit Version Update
        run: |
          git add custom_components/csnet_home/manifest.json
          git commit -m "Updating to version ${{ inputs.version }}"
          git push origin main

      - name: Create and Push Tag
        run: |
          git tag ${{ inputs.version }}
          git push origin ${{ inputs.version }}

      - name: Create Release
        uses: actions/github-script@v7
        with:
          script: |
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ inputs.version }}',
              name: '${{ inputs.version }}',
              draft: false,
              prerelease: false,
              generate_release_notes: true
            });
            console.log(`Created release ${release.html_url}`);

  # This job runs when a release is published to create and upload the zip
  build_and_upload_zip:
    if: github.event_name == 'release' && github.event.release.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - name: Debug Release Info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Tag: ${{ github.event.release.tag_name }}"
          echo "Target: ${{ github.event.release.target_commitish }}"
          echo "Draft: ${{ github.event.release.draft }}"
          echo "Prerelease: ${{ github.event.release.prerelease }}"

      - name: Verify Manifest Version
        run: |
          MANIFEST_VERSION=$(grep -Po '(?<="version": ")[^"]*' ./custom_components/csnet_home/manifest.json)
          TAG_VERSION="${{ github.event.release.tag_name }}"
          TAG_VERSION_NO_V="${TAG_VERSION#v}"

          echo "Manifest version: ${MANIFEST_VERSION}"
          echo "Tag version: ${TAG_VERSION_NO_V}"

          if [ "${MANIFEST_VERSION}" != "${TAG_VERSION_NO_V}" ]; then
            echo "ERROR: Manifest version (${MANIFEST_VERSION}) does not match tag version (${TAG_VERSION_NO_V})"
            exit 1
          fi

      - name: Create Zip Archive
        run: |
          cd custom_components/csnet_home
          # Remove any existing zip
          rm -f hass-custom-csnet-home.zip
          # Create zip with all files except git, cache, and python bytecode
          zip -r hass-custom-csnet-home.zip . \
            -x "*.git*" \
            -x "*__pycache__*" \
            -x "*.pyc" \
            -x "*.pyo" \
            -x "*.DS_Store" \
            -x "*.pytest_cache*"
          # Verify zip was created
          if [ ! -f "hass-custom-csnet-home.zip" ]; then
            echo "ERROR: Failed to create zip file"
            exit 1
          fi
          echo "âœ… Zip created successfully: $(ls -lh hass-custom-csnet-home.zip)"
          zipinfo hass-custom-csnet-home.zip | head -20

      - name: Upload Zip to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./custom_components/csnet_home/hass-custom-csnet-home.zip
          tag_name: ${{ github.event.release.tag_name }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Zip as Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: hass-custom-csnet-home-${{ github.event.release.tag_name }}
          path: ./custom_components/csnet_home/hass-custom-csnet-home.zip
          if-no-files-found: error
          retention-days: 90
          compression-level: 0
