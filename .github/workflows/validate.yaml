name: Validate

'on':
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    name: Validate with Hassfest
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Run Hassfest
        uses: home-assistant/actions/hassfest@master

  hacs_validation:
    name: HACS Validation
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: HACS validation
        uses: hacs/action@main
        with:
          ignore: brands
          category: integration

  style:
    name: Check Code Style
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install Black
        run: python3 -m pip install black==25.9.0

      - name: Check formatting with Black
        run: black --check --diff .

  lint:
    name: Lint with Pylint
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r custom_components/csnet_home/requirements-dev.txt

      - name: Run Pylint
        run: pylint custom_components/csnet_home
        continue-on-error: true

  # Note: pytest removed due to josepy dependency conflicts in isolated pip installs
  # Docker integration tests provide comprehensive validation in real HA environment

  security:
    name: Security Scan
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r custom_components/csnet_home/requirements-dev.txt
          python3 -m pip install bandit safety

      - name: Run Bandit security scan
        run: bandit -r custom_components/csnet_home -c tests/bandit.yaml
        continue-on-error: true

      - name: Check dependencies for vulnerabilities
        run: safety check --json || true
        continue-on-error: true
