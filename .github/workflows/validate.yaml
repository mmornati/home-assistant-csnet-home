name: Validate

'on':
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    name: Validate with Hassfest
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Run Hassfest
        uses: home-assistant/actions/hassfest@master

  hacs_validation:
    name: HACS Validation
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: HACS validation
        uses: hacs/action@main
        with:
          ignore: brands
          category: integration

  style:
    name: Check Code Style
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install Black
        run: python3 -m pip install black==25.9.0

      - name: Check formatting with Black
        run: black --check --diff .

  lint:
    name: Lint with Pylint
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r custom_components/csnet_home/requirements-dev.txt

      - name: Run Pylint
        run: pylint custom_components/csnet_home
        continue-on-error: true

  pytest:
    name: Tests - HA ${{ matrix.ha-version }} / Python ${{ matrix.python-version }}
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        ha-version:
          - "2024.9.3"    # Q3 stable
          - "2024.11.3"   # Recent stable
          - "2024.12.5"   # Latest 2024
        exclude:
          # 2025.x versions require Python 3.13.2+
          - python-version: "3.11"
            ha-version: "2025.1.4"
          - python-version: "3.12"
            ha-version: "2025.1.4"
        include:
          # Add 2025.1.4 for Python 3.13 only
          - python-version: "3.13"
            ha-version: "2025.1.4"

    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python ${{ matrix.python-version }}
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Home Assistant ${{ matrix.ha-version }}
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install homeassistant==${{ matrix.ha-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install -r custom_components/csnet_home/requirements-dev.txt

      - name: Run tests with coverage
        run: pytest --cov=custom_components --cov-report=xml --cov-report=term
        env:
          HA_VERSION: ${{ matrix.ha-version }}

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12' && matrix.ha-version == '2024.12.5'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Test Summary
        if: always()
        run: |
          echo "### Test Results - HA ${{ matrix.ha-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Python**: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  security:
    name: Security Scan
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v5.0.0"

      - name: Setup Python
        uses: "actions/setup-python@v6.0.0"
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r custom_components/csnet_home/requirements-dev.txt
          python3 -m pip install bandit safety

      - name: Run Bandit security scan
        run: bandit -r custom_components/csnet_home -c tests/bandit.yaml
        continue-on-error: true

      - name: Check dependencies for vulnerabilities
        run: safety check --json || true
        continue-on-error: true
